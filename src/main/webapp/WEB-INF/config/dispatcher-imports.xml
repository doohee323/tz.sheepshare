<?xml version="1.0" encoding="EUC-KR"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<mvc:resources mapping="/backbonejs/common/js/**" location="/backbonejs/common/js/"/>
	<mvc:resources mapping="/backbonejs/common/css/**" location="/backbonejs/common/css/"/>

	<!-- ============================================================= -->
    <!-- 인터셉터 설정                                                 -->
	<!--  ============================================================= -->
	<bean id="annotationMapper" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	 <property name="interceptors">
	  <list>
		<bean id="comwebInterceptor" class="tz.basis.core.ux.comweb.mvc.interceptor.ComWebDSHandlerInterceptor" />
		<bean id="jsonInterceptor" class="tz.basis.core.ux.json.mvc.interceptor.JsonDSHandlerInterceptor" />
		<!-- 사용자정의 인터셉터 : webContentInterceptor -->
		<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor" p:cacheSeconds="0" />
	  </list>
	 </property>
	 <property name="order" value="0" />
	</bean> 

	<!-- ============================================================= -->
    <!--  ArgResolver 설정                                                   -->
    <!-- ============================================================= -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="customArgumentResolvers">
			<list>
				<bean class="tz.basis.core.ux.comweb.mvc.ComWebArgResolver" autowire="byType"/>
				<bean class="tz.basis.core.ux.json.mvc.JsonWebArgResolver" autowire="byType"/>
		  </list>
		</property>
	</bean> 

	<!-- ============================================================= -->
    <!--  ViewResolver 설정                                                   -->
    <!-- ============================================================= -->
    <bean id="tzViewResolver" class="tz.basis.core.mvc.resolver.TzViewResolver">
		<property name="defaultView">
			<bean class="tz.basis.core.mvc.view.TzView" />
		</property>
		<property name="pageViewResolver" ref="pageViewResolver" />
		<property name="order" value="1" />
	</bean>

	<bean id="pageViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="" p:suffix="" />

	<!-- ============================================================= -->
    <!--  ExceptionViewResolver 설정                                         -->
    <!-- ============================================================= -->
 	<bean class="tz.basis.core.mvc.resolver.TzExceptionViewResolver" >
 		<property name="exceptionStatusCode" value="OK" />
 		<property name="order" value="1" />
 		<!-- <property name="defaultErrMessage" value="failure" />-->
 		<property name="exceptionMessageWriters">
 			<list>
				<bean id="businessExceptionMessageWriter" class="tz.extend.core.exception.BizExceptionMessageWriter" />
				<bean id="sqlExceptionMessageWriter" class="tz.extend.core.exception.OraExceptionMessageWriter" />
 			</list>
 		</property>
 	</bean>

	<!-- 메세지 관리 -->
	<bean id="messageSourceAccessor" class="org.springframework.context.support.MessageSourceAccessor">
		<constructor-arg ref="messageSource" />
		<constructor-arg value="ko_KR"/>
	</bean>

	<bean id="messageSource" class="tz.extend.core.message.DatabaseMessageSource" >
	</bean>
	<!-- 메세지 관리 -->

	<!-- Transaction Manager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Transaction AOP -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethods"
			expression="execution(* *..*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>
	<!-- Transaction -->

    <bean id="applicationContextProvider2" class="tz.extend.core.mvc.context.ApplicationContextProvider" depends-on="constants"/>

</beans>